name: Deploy HELMs Tools to AKS

on:
  push:
    branches: [ main ]
    paths:
      - iac/aks-deploy/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: iac/aks-deploy
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Helm
      uses: azure/setup-helm@v3

    - name: Azure Login
      run: |
        az login --service-principal \
          -u ${{ secrets.AZURE_CLIENT_ID }} \
          -p ${{ secrets.AZURE_CLIENT_SECRET }} \
          --tenant ${{ secrets.AZURE_TENANT_ID }}

    - name: Set AKS context
      uses: azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        cluster-name: ${{ secrets.AKS_NAME }}
        resource-group: ${{ secrets.AKS_RG }}

    - name: Add Helm repositories
      run: |
        helm repo add apache-airflow https://airflow.apache.org
        helm repo add grafana https://grafana.github.io/helm-charts
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo add elastic https://helm.elastic.co
        helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        helm repo add spark-operator https://kubeflow.github.io/spark-operator
        helm repo add kedacore https://kedacore.github.io/charts
        helm repo update

    - name: Create namespaces
      run: |
        kubectl create namespace airflow --dry-run=client -o yaml | kubectl apply -f -
        kubectl create namespace elk --dry-run=client -o yaml | kubectl apply -f -
        kubectl create namespace grafana --dry-run=client -o yaml | kubectl apply -f -
        kubectl create namespace prometheus --dry-run=client -o yaml | kubectl apply -f -
        kubectl create namespace nginx --dry-run=client -o yaml | kubectl apply -f -
        kubectl create namespace spark-operator --dry-run=client -o yaml | kubectl apply -f -
        kubectl create namespace spark-history --dry-run=client -o yaml | kubectl apply -f -
        kubectl create namespace spark --dry-run=client -o yaml | kubectl apply -f -
        kubectl create namespace keda --dry-run=client -o yaml | kubectl apply -f -

    - name: Deploy Helm charts
      run: |
        helm upgrade --install airflow apache-airflow/airflow \
          --namespace airflow \
          --values values/airflow.yaml

        helm upgrade --install elasticsearch elastic/elasticsearch \
          --namespace elk \
          --values values/elk.yaml

        helm upgrade --install kibana elastic/kibana \
          --namespace elk \
          --values values/elk.yaml

        helm upgrade --install grafana grafana/grafana \
          --namespace grafana \
          --values values/grafana.yaml

        helm upgrade --install prometheus prometheus-community/prometheus \
          --namespace prometheus \
          --values values/prometheus.yaml

        helm upgrade --install nginx ingress-nginx/ingress-nginx \
          --namespace nginx \
          --values values/nginx.yaml
        
        helm install spark-operator/spark-operator --namespace spark-operator \
           --set webhook.enable=true --set sparkJobNamespace=spark

        helm install spark-history ./charts/spark-history-server \
          --namespace spark-history \
          --values charts/spark-history-server/values.yaml
        
        helm upgrade --install keda kedacore/keda \
          --namespace keda \
          --values values/keda.yaml 

    - name: Criar federated identity para cada namespace
      run: |
        OIDC_URL=$(az aks show \
          --name ${{ secrets.AKS_NAME }} \
          --resource-group ${{ secrets.AKS_RG }} \
          --query "oidcIssuerProfile.issuerUrl" -o tsv)

        for NS in airflow elk grafana spark prometheus nginx app spark-operator spark-history keda; do
          az identity federated-credential create \
            --name ${NS}-federation \
            --identity-name ${{ secrets.MANAGED_IDENTITY_NAME }} \
            --resource-group ${{ secrets.AKS_RG }} \
            --issuer $OIDC_URL \
            --subject system:serviceaccount:${NS}:${NS}-sa \
            --audiences api://AzureADTokenExchange
        done

    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f manifests/secrets/
        kubectl apply -f manifests/controllers/
        kubectl apply -f manifests/ingress/
        kubectl apply -f manifests/pvc/
        kubectl apply -f manifests/rbac/

