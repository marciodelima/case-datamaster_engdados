name: Build and Deploy APPs to AKS

on:
  push:
    paths:
      - app/**

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # 🔐 Login na Azure via SPN armazenado no Key Vault
    - name: Azure Login via Key Vault
      run: |
        echo "🔐 Buscando secrets do Key Vault..."
        export CLIENT_ID=$(az keyvault secret show --name spn-client-id --vault-name kv-iac-secrets --query value -o tsv)
        export CLIENT_SECRET=$(az keyvault secret show --name spn-client-secret --vault-name kv-iac-secrets --query value -o tsv)
        export TENANT_ID=$(az keyvault secret show --name spn-tenant-id --vault-name kv-iac-secrets --query value -o tsv)

        echo "🔐 Autenticando na Azure..."
        az login --service-principal -u $CLIENT_ID -p $CLIENT_SECRET --tenant $TENANT_ID

        echo "CLIENT_ID=$CLIENT_ID" >> $GITHUB_ENV
        echo "TENANT_ID=$TENANT_ID" >> $GITHUB_ENV

    # ✅ Validação de Dockerfile
    - name: Validate Dockerfile
      run: |
        if ! grep -q "FROM" Dockerfile; then
          echo "❌ Dockerfile inválido: imagem base não definida"
          exit 1
        fi
        echo "✅ Dockerfile validado"

    # 🐳 Build da imagem Docker
    - name: Build Docker Image
      run: |
        IMAGE_TAG=${{ github.sha }}
        IMAGE_NAME=${{ secrets.ACR_LOGIN_SERVER }}/app:$IMAGE_TAG

        echo "🔧 Buildando imagem: $IMAGE_NAME"
        docker build -t $IMAGE_NAME .

    # 🔐 Login no ACR
    - name: Login to ACR
      run: |
        echo "🔐 Logando no ACR..."
        az acr login --name ${{ secrets.ACR_NAME }}

    # 📤 Push da imagem para o ACR
    - name: Push Docker Image
      run: |
        IMAGE_TAG=${{ github.sha }}
        IMAGE_NAME=${{ secrets.ACR_LOGIN_SERVER }}/app:$IMAGE_TAG

        echo "📤 Enviando imagem para o ACR..."
        docker push $IMAGE_NAME

    # ☸️ Configurar acesso ao AKS
    - name: Set Kubeconfig
      run: |
        echo "☸️ Configurando acesso ao AKS..."
        az aks get-credentials --resource-group ${{ secrets.AKS_RG }} --name ${{ secrets.AKS_NAME }}

    # ✅ Validação de manifest Kubernetes
    - name: Validate Kubernetes Manifests
      run: |
        echo "🔍 Validando YAMLs..."
        yamllint k8s/
        kubectl kustomize k8s/ | kubeval --strict

    # 🚀 Deploy no AKS
    - name: Deploy to AKS
      run: |
        echo "🚀 Aplicando manifest no AKS..."
        kubectl apply -k k8s/

